{"version":3,"sources":["components/title-page/Title.js","components/projects/project-card/ProjectCard.js","components/projects/Projects.js","components/about-me/About.js","App.js","serviceWorker.js","index.js"],"names":["Title","className","left","React","Component","ProjectCard","href","icon","faGithub","Projects","About","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6YAeeA,E,iLATP,OACI,yBAAKC,UAAU,4BACX,kBAAC,IAAD,CAAMC,MAAI,GAAC,yBAAKD,UAAU,YAAf,uBAAmD,6BAC1D,yBAAKA,UAAU,YAAf,0C,GALAE,IAAMC,W,wBCwCXC,G,uLAnCP,OACI,yBAAKJ,UAAU,gBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,cAAhB,WAGA,0BAAMA,UAAU,cAAhB,WAGA,0BAAMA,UAAU,cAAhB,YAMJ,yBAAKA,UAAU,iBAAf,6BACA,yBAAKA,UAAU,oBAAf,4BACA,yBAAKA,UAAU,gBACX,4BACI,gHACA,yFAKZ,yBAAKA,UAAU,gBACX,uBAAGK,KAAK,wBAAwBL,UAAU,uBAAsB,kBAAC,IAAD,CAAiBM,KAAMC,IAAUP,UAAU,gBAA3G,gBACA,uBAAGK,KAAK,wBAAwBL,UAAU,wBAAuB,kBAAC,IAAD,CAAiBM,KAAMC,IAAUP,UAAU,gBAA5G,sB,GA9BME,IAAMC,Y,gBCoBjBK,E,iLApBP,OACI,kBAAC,IAAD,KACI,yBAAKR,UAAU,+BAEX,yBAAKA,UAAU,yBAAf,YAIA,yBAAKA,UAAU,iBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,a,GAbDE,IAAMC,WC4CdM,G,uLA1CP,OACI,kBAAC,IAAD,KACI,yBAAKT,UAAU,4BACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,kBAAiB,0BAAMA,UAAU,0BAAhB,eAChC,yBAAKA,UAAU,kBAAf,iVACA,yBAAKA,UAAU,kBAAiB,0BAAMA,UAAU,0BAAhB,cAChC,yBAAKA,UAAU,aAAf,mDAEA,4BACQ,+DACA,qEACA,gGAOZ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,kBAAiB,0BAAMA,UAAU,0BAAhB,WAChC,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,oBAAb,kBACA,uBAAGA,UAAU,oBAAb,sBACA,uBAAGA,UAAU,oBAAb,UACA,uBAAGA,UAAU,oBAAb,uBACA,uBAAGA,UAAU,oBAAb,0BACA,uBAAGA,UAAU,oBAAb,aACA,uBAAGA,UAAU,oBAAb,kBAIZ,yBAAKA,UAAU,iBAAf,kB,GAnCAE,IAAMC,YCiBXO,E,iLAZX,OACE,yBAAKV,UAAU,OACb,kBAAC,EAAD,MAEA,kBAAC,EAAD,MAEA,kBAAC,EAAD,W,GARUE,IAAMC,WCIJQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.3813ed7b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Title.css'\r\nimport Fade from 'react-reveal/Fade'\r\n\r\nclass Title extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"title-container shadow-5\">\r\n                <Fade left><div className=\"name-tag\">Hi, I am Vraj Dugar</div><br />\r\n                    <div className=\"type-tag\">This is supposed to be typed out</div></Fade>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Title;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\r\n\r\n\r\nimport './ProjectCard.css'\r\n\r\nclass ProjectCard extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"project-card\">\r\n                <div className=\"card-text\">\r\n                    <div className=\"skill-list\">\r\n                        <span className=\"skill-item\">\r\n                            Skill 1\r\n                    </span>\r\n                        <span className=\"skill-item\">\r\n                            Skill 1\r\n                    </span>\r\n                        <span className=\"skill-item\">\r\n                            Skill 1\r\n                    </span>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"project-title\">CLOTHING E-COMMERCE STORE</div>\r\n                    <div className=\"project-subtitle\">Yelworks Advertising Co.</div>\r\n                    <div className=\"project-desc\">\r\n                        <ul>\r\n                            <li>An E-commerce website made with ReactJS complete with payments and a cart system</li>\r\n                            <li>Libraries/Technologies : Redux, Firebase, Stripe, SCSS</li>\r\n                            {/* <li>An E-commerce website made with ReactJS complete with payments and a cart system</li> */}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-buttons\">\r\n                    <a href=\"www.github.com/VrajKD\" className=\"card-button br3 git\"><FontAwesomeIcon icon={faGithub} className=\"button-icon\" />LINK TO REPO</a>\r\n                    <a href=\"www.github.com/VrajKD\" className=\"card-button br3 proj\"><FontAwesomeIcon icon={faGithub} className=\"button-icon\" />VIEW PROJECT</a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectCard;","import React from 'react';\r\nimport './Projects.css'\r\nimport ProjectCard from './project-card/ProjectCard';\r\nimport Zoom from 'react-reveal/Zoom'\r\n\r\nclass Projects extends React.Component {\r\n    render() {\r\n        return (\r\n            <Zoom>\r\n                <div className=\"projects-container shadow-5\">\r\n\r\n                    <div className=\"project-section-title\">\r\n                        Projects\r\n                </div>\r\n\r\n                    <div className=\"project-cards\">\r\n                        <ProjectCard />\r\n                        <ProjectCard />\r\n                        <ProjectCard />\r\n                    </div>\r\n                    {/* <div className=\"type-tag\">This is supposed to be typed out</div> */}\r\n                </div>\r\n            </Zoom>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport './About.css'\r\nimport ZoomInUp from 'react-reveal/Zoom';\r\n\r\n\r\nclass About extends React.Component {\r\n    render() {\r\n        return (\r\n            <ZoomInUp>\r\n                <div className=\"about-container shadow-5\">\r\n                    <div className=\"about-content\">\r\n                        <div className=\"about-personal tc\">\r\n                            <div className=\"personal-title\"><span className=\"bb pb2 b--light-silver\">THIS IS ME</span></div>\r\n                            <div className=\"personal-intro\">I am a seasoned graphic designer with over 10 years of experience working in the advertising industry. My work focuses on UX, UI, and typography.I am a seasoned graphic designer with over 10 years of experience working in the advertising industry. My work focuses on UX, UI, and typography. My work focuses on UX, UI, and typography.</div>\r\n                            <div className=\"personal-title\"><span className=\"bb pb2 b--light-silver\">EDUCATION</span></div>\r\n                            <div className=\"education\">\r\n                                - - VELLORE INSTITUTE OF TECHNOLOGY, VELLORE - -\r\n                            <ul>\r\n                                    <li> Maintained a high CGPA of 9.29</li>\r\n                                    <li> Design Team member at CodeChef - VIT</li>\r\n                                    <li> Received a Merit List certificate for academic achievements.</li>\r\n                                </ul>\r\n                            </div>\r\n                            {/* <div className=\"personal-point\">VRAJ KISHAN DUGAR</div>\r\n                        <div className=\"personal-point\">- - - vrajkishan@gmail.com - - -</div>\r\n                        <div className=\"personal-point\">- - - +91 9879202825 - - -</div> */}\r\n                        </div>\r\n                        <div className=\"about-skills tc\">\r\n                            <div className=\"personal-title\"><span className=\"bb pb2 b--light-silver\">SKILLS</span></div>\r\n                            <div className=\"about-skills-list\">\r\n                                <p className=\"about-skill-item\">ReactJS, Redux</p>\r\n                                <p className=\"about-skill-item\">Vanilla JavaScript</p>\r\n                                <p className=\"about-skill-item\">NodeJS</p>\r\n                                <p className=\"about-skill-item\">MongoDB/PostgresSQL</p>\r\n                                <p className=\"about-skill-item\">Firebase ( FireStore )</p>\r\n                                <p className=\"about-skill-item\">Bootstrap</p>\r\n                                <p className=\"about-skill-item\">Material UI</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section-title\">\r\n                        ABOUT ME\r\n                </div>\r\n                </div>\r\n            </ZoomInUp >\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\nimport 'tachyons'\nimport './App.css';\nimport Title from './components/title-page/Title';\nimport Projects from './components/projects/Projects';\nimport About from './components/about-me/About';\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Title />\n\n        <Projects />\n\n        <About />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}